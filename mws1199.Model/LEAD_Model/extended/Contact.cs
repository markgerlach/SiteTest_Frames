using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Reflection;
using System.Text;

using LEADBase;

namespace LEAD
{
	/// <summary>
	/// Class Name: Contact
	/// This class can be modified by the user and will not be written over if the class is already found.
	/// Generated by GenClasses on 04/06/2017 01:40 PM
	/// </summary>
	public partial class Contact
	{
		public string FullName_LastFirst
		{
			get
			{
				string rtv = string.Empty;
				if (!String.IsNullOrEmpty(_lastName)) { rtv = _lastName; }
				if (!String.IsNullOrEmpty(_firstName)) { rtv += ", " + _firstName; }
				return rtv;
			}
		}
		public static readonly string FN_FullName_LastFirst = "FullName_LastFirst";

		private string _defaultSingleLIneAddress = string.Empty;
		public string DefaultSingleLineAddress
		{
			get
			{
				if (!String.IsNullOrEmpty(_defaultSingleLIneAddress.Trim())) { return _defaultSingleLIneAddress; }

				// Get it if you don't have it
				string rtv = string.Empty;
				ContactAddressCollection coll = new ContactAddressCollection("iContactID = " + _contactID + " AND bInactive = 0");
				coll.Sort(ContactAddress.FN_Default + " DESC");
				if (coll.Count > 0)
				{
					rtv = coll[0].SingleLineAddress;
				}
				return rtv;
			}
		}
		public static readonly string FN_DefaulSingleLineAddress = "DefaulSingleLineAddress";

		private string _defaultMultiLineAddress = string.Empty;
		public string DefaultMultiLineAddress
		{
			get
			{
				if (!String.IsNullOrEmpty(_defaultMultiLineAddress.Trim())) { return _defaultMultiLineAddress; }

				// Get it if you don't have it
				string rtv = string.Empty;
				ContactAddressCollection coll = new ContactAddressCollection("iContactID = " + _contactID + " AND bInactive = 0");
				coll.Sort(ContactAddress.FN_Default + " DESC");
				if (coll.Count > 0)
				{
					rtv = coll[0].MultiLineAddress;
				}
				return rtv;
			}
		}
		public static readonly string FN_DefaulMultiLineAddress = "DefaultMultiLineAddress";
	}

	public partial class ContactCollection : ClassGenBindingList<Contact, long>
	{
		/// <summary>
		/// Get the contact name 
		/// </summary>
		/// <param name="contactID">The ID to find</param>
		/// <returns>The name of the individual</returns>
		public static string GetContactName(long contactID)
		{
			string rtv = string.Empty;
			ContactCollection localColl = new ContactCollection("iContactID = " + contactID.ToString());
			if (localColl.Count == 0)
			{
				// Handle what happens when we don't have a valid record
			}
			else
			{
				rtv = localColl[0].FullName_LastFirst;
			}
			return rtv;
		}
	}
}

